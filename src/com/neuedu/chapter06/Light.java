package com.neuedu.chapter06;

/**
	
				         抽象（抽取共有的特质）
	对象（object） -------------------->  类（class）
	
				 具体化 | 实例化（new）
	类（class）-----------------------> 对象（Object）
	
	
	面向对象的三大特性：封装、继承、多态
	
	-------------------------------------------------------------------------------
	1.分析对象Object（计算机）：
		  属性：品牌、显示器、主机、键盘、鼠标、颜色
		  行为：开机、关机
		     ||
		     ||
		     ||
		     ||
		     \/
     2.根据对象分析，编程代码中的类Class
     	 属性（全局变量、成员变量）：品牌brand、显示器monitor、主机case、键盘keyboard、鼠标mouse、颜色color
		 行为（成员方法）：开机turnOn()、关机turnOff()
	-------------------------------------------------------------------------------
	-------------------------------------------------------------------------------
	1.分析对象Object（灯）：
		  属性：灯丝、灯罩、灯座
		  行为：开灯、关灯、调亮、调亮
		     ||
		     ||
		     ||
		     ||
		     \/
     2.根据对象分析，编程代码中的类Class
     	   属性（全局变量、成员变量）：灯丝filament、灯罩lampshade、灯座lampholder
		  行为（成员方法）：开灯on()、关灯off()、调亮lighten()、调暗dim()
	-------------------------------------------------------------------------------
	
	
	类的定义：
		   <修饰符>  class 类名
		   {
		   		//类的成员
		   		成员变量;
		   		成员方法;
		   		嵌套类（内部类）;
		   }
		   
		   修饰符:public <default>
		   
		    类名：帕斯卡(pascal)规则命名，首字母大写，其余单词的首字母大写，例如HelloWorld
		    
		  注意：
		 	1.一个*.java源文件中仅允许存在一个public修饰的类
		 	2.public修饰的类的名称必须与*.java源文件名称大小写一致
		 	
   ------------------------------------------------------------------------- 
	    类是创建对象的模板，对象是类的实例
	    
	    创建对象：
	 	   类名   对象名  = new 构造器();
   ------------------------------------------------------------------------- 
	 	   
	    构造器（构造方法/构造器/构造函数，Constructor）
			1.具有与类相同的名称
			2.不含返回值类型
			3.不能在方法中用return语句返回一个值
			4. 一般访问权限为public
		  
		         在一个类中，具有上述特征的方法就是构造器。
    
	   构造器的作用：
			1.完成对象的创建，即完成对象的实例化。XiyoujiRole sunwukong = new XiyoujiRole();
			2.一般使用构造器来完成对成员变量的初始化。XiyoujiRole tangSeng = new XiyoujiRole("唐僧", "无", "☆☆☆☆☆", "★★★★★");
 
                注意：
            1.默认带无参构造函数
            2.当定义带参数构造函数时，默认无参构造函数失效了，需要显示定义出来
 */
public class Light {
	/**
	 *   属性（全局变量、成员变量）：灯丝filament、灯罩lampshade、灯座lampholder
	 */
	/**灯丝*/
	String filament;
	
	/**灯罩*/
	String lampshade;
	
	/**灯座*/
	String lampholder;
	
	
	/**
	 * 行为（成员方法）：开灯on()、关灯off()、调亮lighten()、调暗dim()
	 */
	/**开灯*/
	public void on()
	{
		System.out.println("开灯.............");
	}
	
	/**关灯*/
	public void off()
	{
		System.out.println("关灯.............");
	}
	
	/**调亮*/
	public void lighten()
	{
		System.out.println("调亮   +1");
	}
	
	/**调暗*/
	public void dim()
	{
		System.out.println("调暗   -1");
	}
}

class Computer
{
	
}

